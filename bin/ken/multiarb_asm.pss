@v:0
!!ARBvp1.0
PARAM ModelViewProj[4] = {state.matrix.mvp};
TEMP temp;
DP4 temp.x, ModelViewProj[0], vertex.position;
DP4 temp.y, ModelViewProj[1], vertex.position;
DP4 temp.z, ModelViewProj[2], vertex.position;
DP4 temp.w, ModelViewProj[3], vertex.position;
MOV result.position, temp;
MOV result.color, vertex.color;
MOV result.texcoord[0], vertex.texcoord[0];
END

@f:default
!!ARBfp1.0
TEMP pos, col;
ADD pos, fragment.texcoord[0], program.env[0]; #pan texcoord
TEX col, pos, texture[0], 2D;
MUL result.color.xyzw, col, program.env[1].xyzw; #scale color
END

@f:interf
!!ARBfp1.0 #arb asm port of interference.kc originally by Dennis Radon
TEMP a;
SUB a, fragment.texcoord[0].xyxy, program.env[0];
MUL a, a, program.env[1].xyxy;
MUL a, a, a;
ADD a, a, a.ywyw;
RSQ a.y, a.x; RSQ a.w, a.z;
MUL a, a, a.yyww;
MAD a, a, program.env[1].z, program.env[1].w;
FRC a, a;
SUB a.yw, {0,1,0,1}, a.xxzz;
MIN a, a.xxzz, a.yyww;
ADD a.y, a.x, a.z;
ADD result.color, a, {.25,0,.25,0};
END

@h
if (numframes == 0)
{
   glsettex(0,"earth.jpg");
   glbindtexture(0);
}

glsetshader("0","interf");
glProgramEnvParam(0,.375,.5,.625,.5);
glProgramEnvParam(1,1,yres/xres,32,-(klock()%1));
glquad(1);

glsetshader("0","default");
t = klock();
glProgramEnvParam(0,cos(t/2),sin(t/2),0,0);
glProgramEnvParam(1,noise(t,0.5)+1,noise(t,1.5)+1,noise(t,2.5)+1,1);
glBegin(GL_QUADS);
glTexCoord(0,0); glVertex(-2,-1,-6);
glTexCoord(1,0); glVertex(+2,-1,-6);
glTexCoord(1,1); glVertex(+2,-1,-2);
glTexCoord(0,1); glVertex(-2,-1,-2);
glEnd();